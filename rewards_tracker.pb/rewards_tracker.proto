syntax = "proto3";
package rewards_tracker.pb;
option go_package = "/rewards_tracker";

enum CardCategory{
  GENERAL_SPENDING = 0;
  AIR_TICKETS      = 1;
  DONATIONS        = 2;
  DINING           = 3;
  EDUCATION        = 4;
  FOOD_DELIVERY    = 5;
  RIDE_HAILING     = 6;
  GROCERIES        = 7;
  HOTELS           = 8;
  HOSPITALS        = 9;
  INSURANCE        = 10;
  SHOPPING         = 11;
  PUBLIC_TRANSPORT = 12;
  TELCO            = 13;
  UTILITIES        = 14;
}

enum CardPaymentType{
  CHIP        = 0;
  STRIPE      = 1;
  CONTACTLESS = 2;
  ONLINE      = 3;
}

enum CardRounding{
  ROUND_DOWN = 0;
  ROUND      = 1;
}

enum CardCapType{
  NO_CAP          = 0;
  CALENDAR_MONTH  = 1;
  STATEMENT_MONTH = 2;
}

enum CardType{
  CREDIT_CARD = 0;
  CHARGE_CARD = 1;
  DEBIT_CARD = 2;
}

enum OrderBy{
  ASC = 0;
  DESC = 1;
}

enum ErrorCode{
  ERROR_OK = 0;
  ERROR_PARAMS = 1;
  ERROR_JSON_BIND = 2;
}

enum CurrencyType{
  LOCAL = 0;
  FCY = 1;
}

message RequestMeta{
  optional string token = 1;
}

message GenericResponse{
  optional ResponseMeta response_meta = 1;
}

message ResponseMeta{
  optional int64 error_code = 1;
  optional string error_message = 2;
}

message User{
  enum ErrorCode{
    ERROR_OK = 0;
    ERROR_USER_NOT_EXISTS = 1;
    ERROR_USER_CARD_PAIRING_NOT_EXISTS = 2;
  }
  optional int64 user_id = 1;
  optional string user_name = 2;
  optional int64 timestamp = 3;
}

message Lists{
  repeated int64 list = 1;
}

message CardRules{
  optional Lists whitelist_categories = 1;
  optional Lists blacklist_categories = 2;
  optional Lists whitelist_payment_types = 3;
  optional Lists blacklist_payment_types = 4;
}

message CardDb{
  optional int64 card_id = 1;
  optional string card_name = 2;
  optional string short_card_name= 3;
  optional int64 card_type = 4;
  optional string card_image = 5;
  optional string card_issuer = 6;
  optional int64 local_base_rewards = 7;
  optional double local_base_miles = 8;
  optional bytes local_base_whitelist_category = 9;
  optional bytes local_base_blacklist_category = 10;
  optional int64  local_bonus_rewards = 11;
  optional double local_bonus_miles = 12;
  optional bytes local_bonus_whitelist_category = 13;
  optional bytes local_bonus_blacklist_category = 14;
  optional bytes local_bonus_whitelist_payment_types = 15;
  optional bytes local_bonus_blacklist_payment_types = 16;
  optional int64 fcy_base_rewards = 17;
  optional double fcy_base_miles = 18;
  optional bytes fcy_base_whitelist_category = 19;
  optional bytes fcy_base_blacklist_category = 20;
  optional int64 fcy_bonus_rewards = 21;
  optional double fcy_bonus_miles = 22;
  optional bytes fcy_bonus_whitelist_category = 23;
  optional bytes fcy_bonus_blacklist_category = 24;
  optional bytes fcy_bonus_whitelist_payment_types = 25;
  optional bytes fcy_bonus_blacklist_payment_types = 26;
  optional int64 rounding = 27;
  optional double amount_block = 28;
  optional string reward_currency = 29;
  optional int64 cap_type = 30;
  optional double cap = 31;
}

message Card{
  optional int64 card_id = 1;
  optional string card_name = 2;
  optional string short_card_name= 3;
  optional int64 card_type = 4;
  optional string card_image = 5;
  optional string card_issuer = 6;
  optional int64 local_base_rewards = 7;
  optional double local_base_miles = 8;
  optional CardRules local_base_card_rules = 9;
  optional int64  local_bonus_rewards = 10;
  optional double local_bonus_miles = 11;
  optional CardRules local_bonus_card_rules = 12;
  optional int64 fcy_base_rewards = 13;
  optional double fcy_base_miles = 14;
  optional CardRules fcy_base_card_rules = 15;
  optional int64 fcy_bonus_rewards = 16;
  optional double fcy_bonus_miles = 17;
  optional CardRules fcy_bonus_card_rules = 18;
  optional int64 rounding = 19;
  optional double amount_block = 20;
  optional string reward_currency = 21;
  optional int64 cap_type = 22;
  optional double cap = 23;
}

message CardBasicInfo{
  optional int64 card_id = 1;
  optional string card_name = 2;
  optional string short_card_name= 3;
  optional int64 card_type = 4;
  optional string card_image = 5;
  optional string card_issuer = 6;
}

message CardPromotionEligibleCards{
  optional Lists eligible_cards = 1;
  optional Lists ineligible_cards = 2;
}

message CardPromotionConditions{
  optional CardRules card_rules = 1;
  optional double min_amount = 2;
  optional double max_amount = 3;
  optional bool isSGDOnly = 4;
  optional bool isRecurringOnly = 5;
}

message CardPromotion{
  optional int64 promotion_id = 1;
  optional string promotion_name = 2;
  optional string promotion_description = 3;
  optional CardPromotionEligibleCards eligible_card_ids = 4;
  optional int64 promotion_type = 5;
  optional int64 start_time = 6;
  optional int64 end_time = 7;
  optional CardPromotionConditions promotion_conditions = 8;
}

message UserCardBonusQuota{
  optional int64 card_id = 1;
  optional double total_quota = 2;
  optional double remaining_quota = 3;
}

message UserCard{
  enum CardStatus{
    CARD_ACTIVE = 0;
    CARD_INACTIVE = 1;
    CARD_UNKNOWN = 3;
  }
  optional int64 id = 1;
  optional int64 user_id = 2;
  optional int64 card_id = 3;
  optional string card_nickname = 4;
  optional int64 card_status = 5;
  optional int64 card_expiry = 6;
  optional int64 added_timestamp = 7;
  optional int64 updated_timestamp = 8;
}

message UserCardWithInfo{
  optional UserCard user_card = 1;
  optional CardBasicInfo card_info = 9;
}

message UserCardWithInfoDb{
  optional int64 id = 1;
  optional int64 user_id = 2;
  optional int64 card_id = 3;
  optional string card_nickname = 4;
  optional int64 card_status = 5;
  optional int64 card_expiry = 6;
  optional int64 added_timestamp = 7;
  optional int64 updated_timestamp = 8;
  optional string card_name = 9;
  optional string short_card_name= 10;
  optional int64 card_type = 11;
  optional string card_image = 12;
  optional string card_issuer = 13;
}

message TransactionDb{
  optional int64 trx_id = 1;
  optional int64 user_id = 2;
  optional string description = 3;
  optional int64 category = 4;
  optional int64 payment_type = 5;
  optional int64 amount = 6;
  optional int64 amount_converted = 7;
  optional string currency = 8;
  optional int64 transaction_timestamp = 9;
  optional int64 create_timestamp = 10;
  optional int64 update_timestamp = 11;
  optional int64 user_card_id = 12;
  optional int64 is_cancel = 13;
  optional int64 base_miles_earned = 14;
  optional int64 bonus_miles_earned = 15;
  optional int64 base_rewards_earned = 16;
  optional int64 bonus_rewards_earned = 17;
  optional int64 is_promotion = 18;
  optional int64 promotion_id = 20;
  optional int64 promotion_miles_earned = 21;
  optional int64 promotion_rewards_earned = 22;
}

message Transaction{
  optional string description = 1;
  optional int64 category = 2;
  optional int64 payment_type = 3;
  optional int64 amount = 4;
  optional string currency = 5;
  optional int64 time = 6;
  optional int64 user_card_id = 7;
}

message TransactionBasic{
  optional int64 trx_id = 1;
  optional string description = 2;
  optional int64 category = 3;
  optional int64 amount = 4;
  optional string currency = 5;
  optional int64 transaction_timestamp = 6;
  optional int64 user_card_id = 7;
  optional double total_miles_earned = 8;
}

message TransactionBasicWithCardInfo{
  optional TransactionBasic transaction = 1;
  optional CardBasicInfo card_info = 2;
}

message TransactionBasicWithCardInfoDb{
  optional int64 trx_id = 1;
  optional string description = 2;
  optional int64 category = 3;
  optional int64 amount = 4;
  optional string currency = 5;
  optional int64 transaction_timestamp = 6;
  optional int64 user_card_id = 7;
  optional double total_miles_earned = 8;
  optional int64 card_id = 9;
  optional string card_name = 10;
  optional string short_card_name= 11;
  optional int64 card_type = 12;
  optional string card_image = 13;
  optional string card_issuer = 14;
}

message TransactionDbWithCardInfo{
  optional TransactionDb transaction = 1;
  optional CardBasicInfo card_info = 2;
}

message TransactionDbWithCardInfoDb{
  optional int64 trx_id = 1;
  optional int64 user_id = 2;
  optional string description = 3;
  optional int64 category = 4;
  optional int64 payment_type = 5;
  optional int64 amount = 6;
  optional int64 amount_converted = 7;
  optional string currency = 8;
  optional int64 transaction_timestamp = 9;
  optional int64 create_timestamp = 10;
  optional int64 update_timestamp = 11;
  optional int64 user_card_id = 12;
  optional int64 is_cancel = 13;
  optional int64 base_miles_earned = 14;
  optional int64 bonus_miles_earned = 15;
  optional int64 base_rewards_earned = 16;
  optional int64 bonus_rewards_earned = 17;
  optional int64 is_promotion = 18;
  optional int64 promotion_id = 20;
  optional int64 promotion_miles_earned = 21;
  optional int64 promotion_rewards_earned = 22;
  optional int64 card_id = 23;
  optional string card_name = 24;
  optional string short_card_name= 25;
  optional int64 card_type = 26;
  optional string card_image = 27;
  optional string card_issuer = 28;
}

message CurrentSpending{
  optional int64 total_spending = 1;
  optional int64 transaction_count = 2;
}

message CalculatedTransaction{
  optional double actual_amount = 1;
  optional double base_miles_earned = 2;
  optional double bonus_miles_earned = 3;
  optional double base_rewards_earned = 4;
  optional double bonus_rewards_earned = 5;
  optional bool is_promotion = 6;
  optional int64 promotion_id = 7;
  optional int64 promotion_miles_earned = 8;
  optional int64 promotion_rewards_earned = 9;
  optional UserCardBonusQuota user_card_bonus_quota = 10;
}

message AddTransactionRequest{
  enum ErrorCode{
    ERROR_SUCCESS = 0;
    ERROR_FAILED = 2;
  }
  optional RequestMeta request_meta = 1;
  optional int64 user_id = 2;
  optional Transaction transaction_details = 3;
}

message AddTransactionResponse{
  optional ResponseMeta response_meta = 1;
}

message CalculateTransactionRequest{
  enum ErrorCode{
    ERROR_SUCCESS = 0;
    ERROR_FAILED = 1;
  }
  optional RequestMeta request_meta = 1;
  optional int64 user_id = 2;
  optional Transaction transaction_details = 3;
}

message CalculateTransactionResponse{
  optional ResponseMeta response_meta = 1;
  optional CalculatedTransaction calculated_transaction = 2;
}

message PairUserCardRequest{
  enum ErrorCode{
    ERROR_SUCCESS = 0;
    ERROR_CARD_PAIR_EXISTS = 1;
    ERROR_CARD_NOT_EXISTS = 2;
    ERROR_FAILED = 3;
  }

  optional RequestMeta request_meta = 1;
  optional int64 user_id = 2;
  optional int64 card_id = 3;
  optional string card_nickname = 4;
  optional string card_expiry = 5;
}

message PairUserCardResponse{
  optional ResponseMeta response_meta = 1;
  optional UserCardWithInfo user_card_with_info = 2;
}

message GetUserCardsFilter{
  repeated int64 card_statuses = 2;
  optional bool is_expired = 4;
}

message GetUserCardsRequest{
  enum ErrorCode{
    ERROR_SUCCESS = 0;
    ERROR_FAILED = 1;
  }

  enum OrderByField{
    USER_CARD_ADDED_TIME = 0;
    USER_CARD_EXPIRY = 1;
    USER_CARD_NICKNAME = 2;
  }

  optional RequestMeta request_meta = 1;
  optional int64 user_id = 2;
  optional int64 order_by = 3;
  optional int64 direction = 4;
  optional GetUserCardsFilter filter = 5;
}

message GetUserCardsResponse{
  optional ResponseMeta response_meta = 1;
  repeated UserCardWithInfo user_cards_list = 2;
}

message AddCardRequest{
  enum ErrorCode{
    ERROR_SUCCESS = 0;
    ERROR_CARD_EXISTS = 1;
    ERROR_FAILED = 2;
  }
  optional RequestMeta request_meta = 1;
  optional Card card_details = 2;
}

message AddCardResponse{
  optional ResponseMeta response_meta = 1;
  optional int64 card_id = 2;
}

message GetUserTransactionsRequest{
  enum ErrorCode{
    ERROR_SUCCESS = 0;
    ERROR_FAILED = 1;
  }
  optional RequestMeta request_meta = 1;
  optional int64 user_id = 2;
}

message GetUserTransactionsResponse{
  optional ResponseMeta response_meta = 1;
  repeated TransactionBasicWithCardInfo transaction_list = 2;
}

message GetUserTransactionByTrxIdRequest{
  enum ErrorCode{
    ERROR_SUCCESS = 0;
    ERROR_FAILED = 1;
    ERROR_TRX_NOT_FOUND = 2;
  }
  optional RequestMeta request_meta = 1;
  optional int64 user_id = 2;
}

message GetUserTransactionByTrxIdResponse{
  optional ResponseMeta response_meta = 1;
  optional TransactionDbWithCardInfo transaction_info = 2;
}

message GetUserCardByUserCardIdRequest{
  enum ErrorCode{
    ERROR_SUCCESS = 0;
    ERROR_FAILED = 1;
    ERROR_CARD_NOT_FOUND = 2;
  }
  optional RequestMeta request_meta = 1;
  optional int64 user_id = 2;
}

message GetUserCardByUserCardIdResponse{
  optional ResponseMeta response_meta = 1;
  optional UserCardWithInfo user_card_info = 2;
  repeated TransactionBasic transactions = 3;
}
